(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{tPS6:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var o=n("/FXl"),a=n("TjRS"),r=n("3Lmf");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/rehypex/doc/better-media.doc.mdx"}});var s={_frontmatter:l},p=a.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(p,i({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"better-media"},"Better Media"),Object(o.b)("p",null,"Auto Import is a Rehype plugin for MDXHAST that transforms HAST img nodes into JSX nodes, performing the following modifications:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Create an ",Object(o.b)("em",{parentName:"li"},"image")," or ",Object(o.b)("em",{parentName:"li"},"video")," node."),Object(o.b)("li",{parentName:"ul"},"Parse ",Object(o.b)("em",{parentName:"li"},"width"),", ",Object(o.b)("em",{parentName:"li"},"height")," and/or ",Object(o.b)("em",{parentName:"li"},"style")," properties from the alternate text field."),Object(o.b)("li",{parentName:"ul"},"Parse other properties (eg. controls, autoplay, loop) from the alternate text field")),Object(o.b)("h3",{id:"arguments"},"Arguments"),Object(o.b)(r.a,{mdxType:"Arguments"},{name:"videoTest",type:"regex",default:"/.(mp4|webm|avi|mpe?g|wmv|ogg)$/i",desc:"Regular expression that is used to test the source of the element, in order to determine whether it should create an image or video node."},{name:"videoMarker",type:"string",default:"null (not being used)",desc:"If the source of the video starts with this string, it is considered to be a video, disregarding the `videoTest` regex. This is useful for having videos with online URLs which might not end in _.EXT_"},{name:"altSeparator",type:"string",default:"&&",desc:"Separator used in the alternate text field of the image node, in order to add extra properties"}),Object(o.b)("h3",{id:"usage"},"Usage"),Object(o.b)("p",null,"To use this plugin, put it in the ",Object(o.b)("inlineCode",{parentName:"p"},"rehypePlugins")," option of your MDX-JS loader.",Object(o.b)("br",{parentName:"p"}),"\n","In this example we also pass the string ",Object(o.b)("em",{parentName:"p"},"'!video!'")," as ",Object(o.b)("inlineCode",{parentName:"p"},"videoMarker")," option."),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-js"}),"// Webpack example\nconst rehypeBetterMedia = require('@mdxp/rehypex-plugins/better-media');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.mdx$/,\n        use: [\n          'babel-loader',\n          {\n            loader: '@mdx-js/loader',\n            options: {\n              rehypePlugins: [\n                [rehypeBetterMedia, {videoMarker: '!video!'}]\n              ]\n            }\n          }\n        ]\n      },\n      ...\n    ]\n  }\n}\n")),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("p",null,"Once the plugin is setup, you can write the following code:"),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-jsx"}),'![logo image](./path/to/logo.png "An image of my logo")\n\n// Gets transformed by the plugin to:\n<img alt="logo image" src="./path/to/logo.png" title="An image of my logo" />\n')),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-jsx"}),"// Note that style should be defined as a JSX property (double braces)\n![image&&style={{border: '5px solid red'}}&&width='80%'](./path/to/image.jpg)\n\n// Gets transformed by the plugin to:\n<img alt=\"image\" src=\"./path/to/image.jpg\" style={{border: '5px solid red', width: '80%'}} />\n")),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-jsx"}),'![video&&autoplay&&loop](./path/to/video.mp4)\n\n// Gets transformed by the plugin to:\n<video alt="video" src="./path/to/video.mp4" autoplay loop />\n')),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-jsx"}),'![online video&&controls](!video!https://www.thiscoolvideo.com)\n\n// Gets transformed by the plugin to:\n<video alt="online video" src="https://www.thiscoolvideo.com" controls />\n')))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/rehypex/doc/better-media.doc.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-rehypex-doc-better-media-doc-mdx-7941ea2878f48c588e50.js.map