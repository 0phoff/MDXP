(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{lQmn:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return m}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var o=n("/FXl"),a=n("TjRS"),r=n("3Lmf");n("aD51");function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/rehypex/doc/auto-import.doc.mdx"}});var i={_frontmatter:s},l=a.a;function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(l,p({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"auto-import"},"Auto Import"),Object(o.b)("p",null,"Auto Import is a Rehype plugin for MDXHAST that modifies JSX nodes to automatically import files that are passed as properties.\nIt only works for JSX nodes and thus will not work with other nodes like regular HAST element nodes."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE"),Object(o.b)("br",{parentName:"p"}),"\n","In order to automatically import from image nodes as well, you can use the ",Object(o.b)("a",p({parentName:"p"},{href:"./rehypex-bettermedia"}),"Better Media")," plugin, which transforms image elements to JSX nodes, before using this plugin.")),Object(o.b)("h3",{id:"arguments"},"Arguments"),Object(o.b)(r.a,{mdxType:"Arguments"},{name:"test",type:"(value, dir) => bool",default:"(value, dir) => fs.existsSync(path.resolve(dir, value))",desc:"Function that tells whether the value is a file that should be imported"},{name:"noImport",type:"string",default:"null (not being used)",desc:"If a property starts with this value, that part of the value is simply stripped and it is not imported. This is useful to provide a way to pass a file path as raw value to a component."}),Object(o.b)("h3",{id:"usage"},"Usage"),Object(o.b)("p",null,"To use this plugin, put it in the ",Object(o.b)("inlineCode",{parentName:"p"},"rehypePlugins")," option of your MDX-JS loader.",Object(o.b)("br",{parentName:"p"}),"\n","In this example we also pass the string ",Object(o.b)("em",{parentName:"p"},"'!noimport!'")," as ",Object(o.b)("inlineCode",{parentName:"p"},"noImport")," option."),Object(o.b)("pre",null,Object(o.b)("code",p({parentName:"pre"},{className:"language-js"}),"// Webpack example\nconst rehypeAutoImport = require('@mdxp/rehypex-plugins/auto-import');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.mdx$/,\n        use: [\n          'babel-loader',\n          {\n            loader: '@mdx-js/loader',\n            options: {\n              rehypePlugins: [\n                [rehypeAutoImport, {noImport: '!noimport!'}]\n              ]\n            }\n          }\n        ]\n      },\n      ...\n    ]\n  }\n}\n")),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("p",null,"Once the plugin is setup, you can write the following code:"),Object(o.b)("pre",null,Object(o.b)("code",p({parentName:"pre"},{className:"language-jsx"}),'<MyComponent file="./path/to/some/data.json" />\n\n// Gets transformed by the plugin to:\nimport AI__path_to_some_data_json from "./path/to/some/data.json"\n<MyComponent file={AI__path_to_some_data_json} />\n')),Object(o.b)("p",null,"If you do not want to import a certain path and you setup a ",Object(o.b)("inlineCode",{parentName:"p"},"noImport")," string as shown above, you can use:"),Object(o.b)("pre",null,Object(o.b)("code",p({parentName:"pre"},{className:"language-jsx"}),'<MyComponent file="!noimport!./path/to/some/data.json" />\n\n// Gets transformed by the plugin to:\n<MyComponent file="./path/to/some/data.json" />\n')))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/rehypex/doc/auto-import.doc.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-rehypex-doc-auto-import-doc-mdx-10d3d62355524c75b64f.js.map