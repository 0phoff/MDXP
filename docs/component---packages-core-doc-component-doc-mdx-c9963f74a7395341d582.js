(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{mNGJ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return h}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var o=n("/FXl"),a=n("TjRS"),i=n("3Lmf"),s=n("CFjq"),r=n("Bwcg"),l=n("GX7v");n("aD51");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/core/doc/component.doc.mdx"}});var b={_frontmatter:p},d=a.a;function h(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(d,c({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"deck"},"Deck"),Object(o.b)("p",null,"This is the main component, which creates the slide deck on your page."),Object(o.b)("h3",{id:"properties"},"Properties"),Object(o.b)(i.a,{of:s.a,mdxType:"Arguments"}),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-jsx"}),"import Presentation from 'my-presentation.mdx'\n\nReactDOM.render(\n  <Deck>\n    <Presentation />\n  </Deck>,\n  document.getElementById('root')\n);\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"note"},"Note"),Object(o.b)("p",null,"This component can be used to add notes to certain slides, which can be used in presenter mode."),Object(o.b)("h3",{id:"properties-1"},"Properties"),Object(o.b)(i.a,{mdxType:"Arguments"},{name:"start",type:"number",desc:"On which stepIndex to show this note.",default:"0"},{name:"end",type:"number",desc:"Until which stepIndex to show this note. If the number is smaller or equal to zero, we start counting backwards from the last step of the slide.",default:"0"},{name:"children",type:"node",required:!1}),Object(o.b)("h3",{id:"examples-1"},"Examples"),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-md"}),'# SLIDE 1\n\nThis is the first slide.\n\n<Note>\n\nThese are notes that are only shown in presenter mode.  \nThey can help you not to forget what you need to say.\n\n- You can also use markdown syntax inside of here!\n- This will work as __intended__\n\n</Note>\n\n---\n\n# SLIDE 2\n\n<Step>\n\n- This slide contains 3 steps\n- Step 2\n- Step 3\n\n</Step>\n\n<Note end="-1">\n\nThis note will be removed for the last step of this slide.\n\n</Note>\n\n<Note start="1">\n\nThis note will only show with the second step.\n\n</Note>\n')),Object(o.b)("hr",null),Object(o.b)("h2",{id:"step"},"Step"),Object(o.b)("p",null,"This component can be used inside your slides, to step through certain items.\nIt generates a step for each of its direct children and can style them depending on their respective order and the current ",Object(o.b)("inlineCode",{parentName:"p"},"stepIndex"),".\nThe most common use case is to make items appear or disappear in order."),Object(o.b)("p",null,"If this component only has one child, it will implement the stepping behaviour on it's children.\nIf the child component happens to be a table, it will step through its rows or columns,\ndepending on the ",Object(o.b)("inlineCode",{parentName:"p"},"useColumns")," property."),Object(o.b)("h3",{id:"properties-2"},"Properties"),Object(o.b)(i.a,{of:r.b,mdxType:"Arguments"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE"),Object(o.b)("br",{parentName:"p"}),"\n","The styles are applied to the children according to the following rules:  "),Object(o.b)("ul",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ul"},"All children elements get ",Object(o.b)("inlineCode",{parentName:"li"},"base")," styles."),Object(o.b)("li",{parentName:"ul"},"Children whose index is greater than the stepIndex (aka they have not been stepped through), get styled with ",Object(o.b)("inlineCode",{parentName:"li"},"before"),"."),Object(o.b)("li",{parentName:"ul"},"Children whose index is equal to the stepIndex, get styled with ",Object(o.b)("inlineCode",{parentName:"li"},"current")," if it exists."),Object(o.b)("li",{parentName:"ul"},"Children whose index is smaller or equal to the stepIndex (aka they have been stepped through), get styled with ",Object(o.b)("inlineCode",{parentName:"li"},"after"),".")),Object(o.b)("p",{parentName:"blockquote"},"When different styles get applied to a child element, they get combined using spread operators, in the following order:"),Object(o.b)("ol",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"styles.base")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"styles.before")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"styles.after")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"styles.current")))),Object(o.b)("h3",{id:"examples-2"},"Examples"),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-mdxp"}),"# SLIDE 1\n\n<Step>\n\nBy wrapping your content in a `<Step />`, you can uncover them one by one.\n\nPretty neat right ?  \n\n</Step>\n\n---\n\n# SLIDE 2\n\n<Step offset={0}>\n\nYou can even mix and match different types of elements.  \nHere we show a paragraph.\n\n1. And here is a numbered list.\n2. Damn, all elements show up at once\n3. What could we do to solve this ?\n\n<Step>\n\n- Can we nest `<Step />` components ?\n- Sure we can\n- And if it only has one child, it will step through its children\n- Now that's wicked!\n\n</Step>\n</Step>\n\n---\n\n# SLIDE 3\n\n<Step styles={{\n  base:     {transition: 'opacity 0.5s ease-in-out'},\n  before:   {opacity: 0},\n  after:    {opacity: 1},\n}}>\n\n- We can also apply some basic styling for the different states\n- This can allow for some really modern looking slides\n- People will look in awe at your beatifully crafted slide deck\n- Sadly, this demo runtime makes everything flicker\n- But trust me, this is not the case with real slide decks!\n\n</Step>\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"zoom"},"Zoom"),Object(o.b)("p",null,"Zoom the content inside of it to a fixed aspect ratio with css scaling."),Object(o.b)("p",null,"This component has not much to do with presentations, but is used throughout the core codebase and might be useful to use.",Object(o.b)("br",{parentName:"p"}),"\n","One of its use cases is to wrap your presentation, so that you keep the same look of your presentation on small displays."),Object(o.b)("h3",{id:"properties-3"},"Properties"),Object(o.b)(i.a,{of:l.a,mdxType:"Arguments"}))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/core/doc/component.doc.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-core-doc-component-doc-mdx-c9963f74a7395341d582.js.map