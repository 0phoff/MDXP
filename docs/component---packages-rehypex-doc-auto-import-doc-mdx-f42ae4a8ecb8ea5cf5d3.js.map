{"version":3,"sources":["webpack:///../packages/rehypex/doc/auto-import.doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","values","isMDXComponent"],"mappings":"8fAOO,IAAMA,EAAe,Q,0NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,8PAEA,8BACE,iBAAGC,WAAW,cAAa,sBAAQA,WAAW,KAAnB,QAAwC,kBAAIA,WAAW,MAAlF,mFAC2E,mBAAGA,WAAW,KAAQ,CAC7F,KAAQ,0BAD+D,gBAD3E,mEAKF,YAAC,IAAD,CAAKC,OAAQ,CAAC,CAAC,OAAQ,uBAAwB,2EAA4E,CAAC,WAAY,SAAU,wLAAyLF,QAAQ,QACnV,iBAAQ,CACN,GAAM,SADR,SAGA,0DAAyC,0BAAYC,WAAW,KAAvB,iBAAzC,kCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gd,wNA+BTJ,EAAWM,gBAAiB","file":"component---packages-rehypex-doc-auto-import-doc-mdx-f42ae4a8ecb8ea5cf5d3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/media/data/Documents/code/javascript/mdx-presenter/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Arg } from 'gatsby-theme-docz/src/components/tables.jsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"auto-import\"\n    }}>{`Auto Import`}</h1>\n    <p>{`Auto Import is a Rehype plugin for MDXHAST that modifies JSX nodes to automatically import files that are passed as properties.\nIt only works for JSX nodes and thus will not work with other nodes like regular HAST element nodes.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong><br parentName=\"p\"></br>{`\n`}{`In order to automatically import from image nodes as well, you can use the `}<a parentName=\"p\" {...{\n          \"href\": \"./rehypex-bettermedia\"\n        }}>{`Better Media`}</a>{` plugin, which transforms image elements to JSX nodes as well.`}</p>\n    </blockquote>\n    <Arg values={[['test', '(value, dir) => bool', 'Function that tells whether the value is a file that should be imported'], ['noImport', 'string', 'If a property starts with this value, that part of the value is simply stripped and it is not imported. This is useful to provide a way to pass a file as raw value to a component.']]} mdxType=\"Arg\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`To use this plugin, put it in the `}<inlineCode parentName=\"p\">{`rehypePlugins`}</inlineCode>{` option of your MDX-JS loader.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Webpack example\nconst rehypeAutoImport = require('@mdxp/rehypex-plugins/auto-import');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\\\.mdx$/,\n        use: [\n          'babel-loader',\n          {\n            loader: '@mdx-js/loader',\n            options: {\n              rehypePlugins: [\n                rehypeAutoImport\n              ]\n            }\n          }\n        ]\n      },\n      ...\n    ]\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}