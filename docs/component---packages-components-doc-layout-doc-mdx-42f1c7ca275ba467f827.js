(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{b1q0:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return d}));var a=n("Fcif"),o=n("+I+c"),l=(n("mXGw"),n("/FXl")),i=n("TjRS"),r=n("3Lmf"),s=n("pA+D"),b=n("iKvb"),c=n("qvtE"),u=(n("aD51"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/components/doc/layout.doc.mdx"}});var p={_frontmatter:u},h=i.a;function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(l.b)(h,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"layout-components"},"Layout Components"),Object(l.b)("p",null,"This page contains the documentation for all Layout Components that the ",Object(l.b)("inlineCode",{parentName:"p"},"@mdxp/components")," package has to offer."),Object(l.b)("hr",null),Object(l.b)("h2",{id:"blanklayout"},"BlankLayout"),Object(l.b)("p",null,"This is the default layout for MDXP, which is exposed here if you need to explicitely use it.",Object(l.b)("br",{parentName:"p"}),"\n","This layout is setup as a div with the following default ",Object(l.b)("inlineCode",{parentName:"p"},"sx")," style:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"sx = {\n  width: '100%',\n  height: '100%',\n  boxSizing: 'border-box',\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: 'text',\n  bg: 'background',\n  '& p': {textAlign: 'center'},\n}\n")),Object(l.b)("h3",{id:"properties"},"Properties"),Object(l.b)(r.a,{of:s.a,mdxType:"Arguments"}),Object(l.b)("h3",{id:"examples"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-mdxp"}),"# SLIDE 1\nThis slide will use whathever the default layout is as its layout\n\n---\n\n<BlankLayout>\n\n# SLIDE 2\nThis slide wil have a blank layout.\n\n</BlankLayout>\n\n---\n\n<BlankLayout sx={{color: 'tomato'}}>\n\n# SLIDE 3\nThis slide will have a blank layout with a tomato colored text.\n\n</BlankLayout>\n\n---\n\n<BlankLayout sx={{bg: 'primary'}}>\n\n# SLIDE 4\nThis slide will have a blank layout with your theme's \"primary\" color as background.\n\n</BlankLayout>\n\n")),Object(l.b)("hr",null),Object(l.b)("h2",{id:"headerlayout"},"HeaderLayout"),Object(l.b)("p",null,"This layout looks at its first child and if that is an H1-H6 element, places it at the top.\nYou can also pass an optional ",Object(l.b)("inlineCode",{parentName:"p"},"Footer")," element as a property, which will be set at the bottom.\nThe rest of the page will be filled with a div that contains the rest of the slide and which is styled like a ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#blanklayout"}),"BlankLayout")," by default."),Object(l.b)("h3",{id:"properties-1"},"Properties"),Object(l.b)(r.a,{of:b.a,mdxType:"Arguments"}),Object(l.b)("h3",{id:"examples-1"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-mdxp"}),"# SLIDE 1\nThis slide will use whathever the default layout is as its layout\n\n---\n\n<HeaderLayout>\n\n# SLIDE 2\nThis slide will have its title (SLIDE 2) at the top of the page\n\n</HeaderLayout>\n\n---\n\n<HeaderLayout sxHeader={{width: '100%', bg: 'text', color: 'background', textAlign: 'center'}}>\n\n### SLIDE 3\nThis slide will have its title at the top of the page,\nin a full-width box with inverted background and foreground color.\n\nNote that the title is smaller, because we used an H3 tag.\n\n</HeaderLayout>\n\n---\n\n<HeaderLayout>\n\nThis slide 4 will look like a BlankLayout, because it does not have a title as first element.\n\n</HeaderLayout>\n")),Object(l.b)("hr",null),Object(l.b)("h2",{id:"numberlayout"},"NumberLayout"),Object(l.b)("p",null,"This layout renders a ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#blanklayout"}),"BlankLayout"),", but places an extra, absolutely posistioned, element which contains the current slide number.\nThe extra element is rendered with a ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"./components-components#place"}),"Place")," component."),Object(l.b)("h3",{id:"properties-2"},"Properties"),Object(l.b)(r.a,{of:c.a,mdxType:"Arguments"}),Object(l.b)("h3",{id:"examples-2"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-mdxp"}),"# SLIDE 1\nThis slide will use whathever the default layout is as its layout\n\n---\n\n<NumberLayout>\n\n# SLIDE 2\nThis slide will have the number 1 written in the bottom right corner.\n\n</NumberLayout>\n\n---\n\n<NumberLayout offset={1} numberOptions={{bottom: '25px', left: '25px', sx: {color: 'red', fontSize: '50px'}}}>\n\n# SLIDE 3\nThis slide will have the number 3 written in the bottom left corner.  \nThe number will also be red and have a 50px font-size.\n\n</NumberLayout>\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/components/doc/layout.doc.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-components-doc-layout-doc-mdx-42f1c7ca275ba467f827.js.map