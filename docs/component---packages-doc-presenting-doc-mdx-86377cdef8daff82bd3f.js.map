{"version":3,"sources":["webpack:///../packages/doc/presenting.doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,8HAA6G,0BAAYC,WAAW,KAAvB,SAA7G,0CACA,ghBAGyI,kBAAIA,WAAW,MAHxJ,4DAKA,sBACE,kBAAIA,WAAW,MAAf,2EAAgG,0BAAYA,WAAW,MAAvB,SAAhG,gBACA,kBAAIA,WAAW,MAAf,sHAA2I,0BAAYA,WAAW,MAAvB,SAA3I,gBACA,kBAAIA,WAAW,MAAf,kKAAuL,0BAAYA,WAAW,MAAvB,SAAvL,iBAEF,8BACE,iBAAGA,WAAW,cAAa,sBAAQA,WAAW,KAAnB,QAAwC,kBAAIA,WAAW,MAAlF,+FACuF,0BAAYA,WAAW,KAAvB,kBADvF,QAC0J,0BAAYA,WAAW,KAAvB,mBAD1J,qBAC2O,mBAAGA,WAAW,KAAQ,CAC7P,KAAQ,+BAD+N,QAD3O,sB,+MASNJ,EAAWK,gBAAiB","file":"component---packages-doc-presenting-doc-mdx-86377cdef8daff82bd3f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/media/data/Documents/code/javascript/mdxp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"present\"\n    }}>{`Present`}</h1>\n    <p>{`Presenting with MDXP should be pretty self-explanatory, but if you ever need some help, you can press `}<inlineCode parentName=\"p\">{`ALT+H`}</inlineCode>{` to show all the possible keybindings.`}</p>\n    <p>{`MDXP supports various display modes, which can help you during your presentation.\nWhat's more is that you can open your presentation in different tab pages, and each of them can be in a different display mode.\nThis allows you to show your presentation in fullscreen for your audience, while having the presenter mode with all your notes open on your own screen.\nWhenever you navigate to the next slide on your screen, the presentation will automatically advance on any other open tab on your computer.`}<br parentName=\"p\"></br>{`\n`}{`The different modes that are available in MDXP are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Normal Mode : this is the default mode, which simply shows your slides (`}<inlineCode parentName=\"li\">{`ATL+N`}</inlineCode>{` to toggle).`}</li>\n      <li parentName=\"ul\">{`Grid Mode : this mode allows you to see an overview of your presentation, and quickly navigate to a certain slide (`}<inlineCode parentName=\"li\">{`ALT+G`}</inlineCode>{` to toggle).`}</li>\n      <li parentName=\"ul\">{`Presenter Mode : this mode allows you to see the current slide, as well as a preview of the next step. It also shows your presenter notes, as well as a timer (`}<inlineCode parentName=\"li\">{`ALT+P`}</inlineCode>{` to toggle).`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong><br parentName=\"p\"></br>{`\n`}{`You can disable MDXP's mode navigation or slide navigation keybindings, by setting the `}<inlineCode parentName=\"p\">{`modeNavigation`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`slideNavigation`}</inlineCode>{` arguments of the `}<a parentName=\"p\" {...{\n          \"href\": \"/MDXP/core-components#deck\"\n        }}>{`Deck`}</a>{` component.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}