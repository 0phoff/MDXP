{"version":3,"sources":["webpack:///../packages/rehypex/doc/table-align.doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+fAOO,IAAMA,EAAe,Q,0NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,qJACA,8BACE,iBAAGC,WAAW,cAAa,sBAAQA,WAAW,KAAnB,QAAwC,kBAAIA,WAAW,MAAlF,+HAGF,iBAAQ,CACN,GAAM,SADR,SAGA,oIACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,ocA2BL,iBAAQ,CACN,GAAM,YADR,YAGA,uOACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+a,wNAYTJ,EAAWK,gBAAiB","file":"component---packages-rehypex-doc-table-align-doc-mdx-b37511f7f9bd1e643ce1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/media/data/Documents/code/javascript/mdxp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Arguments from 'gatsby-theme-docz/src/components/arguments.jsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"table-align\"\n    }}>{`Table Align`}</h1>\n    <p>{`Table Align is a Rehype plugin that transforms the deprecated alignment properties of tables, to the appropriate css styles.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong><br parentName=\"p\"></br>{`\n`}{`This plugin works on any valid HAST and is thus a regular Rehype plugin, as it has nothing to do with MDXHAST or JSX.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <p>{`This plugin can be used in any Rehype pipeline, but here we show an example of setting it up with MDX-JS.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Webpack example\nconst rehypeTableAlign = require('@mdxp/rehypex-plugins/table-align');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\\\.mdx$/,\n        use: [\n          'babel-loader',\n          {\n            loader: '@mdx-js/loader',\n            options: {\n              rehypePlugins: [\n                tableAlign\n              ]\n            }\n          }\n        ]\n      },\n      ...\n    ]\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <p>{`Once this plugin is setup, you can use the classic markdown table alignment indicators, and it will still work in environments that do not accept the old deprecated alignment properties anymore (eg. React):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`| Column 1 (Left Aligned) | Column 2 (Middle Aligned) | Column 3 (Right Aligned) |\n|:------------------------|:-------------------------:|-------------------------:|\n| Cell 1.1                | Cell 1.2                  | Cell 1.3                 |\n| Cell 2.1                | Cell 2.2                  | Cell 2.3                 |\n| Cell 3.1                | Cell 3.2                  | Cell 3.3                 |\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}