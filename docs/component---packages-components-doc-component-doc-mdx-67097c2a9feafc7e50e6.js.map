{"version":3,"sources":["webpack:///../packages/components/doc/component.doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Columns","Place","name","type","desc","required","isMDXComponent"],"mappings":"4gBAQO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,iGAAgF,0BAAYC,WAAW,KAAvB,oBAAhF,0BACA,uBACA,iBAAQ,CACN,GAAM,WADR,WAGA,8QAEwE,kBAAIA,WAAW,MAFvF,iGAIA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qIAUL,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAWC,GAAIC,IAASH,QAAQ,cAChC,iBAAQ,CACN,GAAM,YADR,YAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,2vBAgCL,uBACA,iBAAQ,CACN,GAAM,SADR,SAGA,mKAAkJ,kBAAIA,WAAW,MAAjK,+BACyB,kBAAIA,WAAW,KAAf,QADzB,SACmE,kBAAIA,WAAW,KAAf,SADnE,4EACiL,kBAAIA,WAAW,KAAf,OADjL,QACyN,kBAAIA,WAAW,KAAf,UADzN,qCAE6B,0BAAYA,WAAW,KAAvB,0BAF7B,4EAE4K,kBAAIA,WAAW,KAAf,MAF5K,KAGA,8BACE,iBAAGA,WAAW,cAAa,sBAAQA,WAAW,KAAnB,QAAwC,kBAAIA,WAAW,MAAlF,8FACsF,kBAAIA,WAAW,MADrG,8QAMF,iBAAQ,CACN,GAAM,gBADR,cAGA,YAAC,IAAD,CAAWC,GAAIE,IAAOJ,QAAQ,cAC9B,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,4cAyBL,uBACA,iBAAQ,CACN,GAAM,WADR,WAGA,sIAC8B,kBAAIA,WAAW,KAAf,MAD9B,sDAEA,8BACE,iBAAGA,WAAW,cAAa,sBAAQA,WAAW,KAAnB,QAAwC,kBAAIA,WAAW,MAAlF,oEAGF,iBAAQ,CACN,GAAM,gBADR,cAGA,YAAC,IAAD,CAAWD,QAAQ,aAChB,CACCK,KAAM,WACNC,KAAM,UACNC,KAAM,+DAEP,CACCF,KAAM,QACNC,KAAM,SACNE,UAAU,EACVD,KAAM,wHAGV,iBAAQ,CACN,GAAM,cADR,YAGA,uBAAK,sBAAMN,WAAW,OAAU,CAC5B,UAAa,gBADZ,4Q,yNAgBTJ,EAAWY,gBAAiB","file":"component---packages-components-doc-component-doc-mdx-67097c2a9feafc7e50e6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/media/data/Documents/code/javascript/mdxp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Arguments from 'gatsby-theme-docz/src/components/arguments.jsx';\nimport { Columns, Place, Styling } from '../src/component';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h1>\n    <p>{`This page contains the documentation for all regular Components that the `}<inlineCode parentName=\"p\">{`@mdxp/components`}</inlineCode>{` package has to offer.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"columns\"\n    }}>{`Columns`}</h2>\n    <p>{`This component turns each of his children into a separate column.\nYou can set different styling options for the columns, by passing them as properties to this component.\nIf you pass an array as a property, each column will get a separate value.`}<br parentName=\"p\"></br>{`\n`}{`Internally, this component is implemented as a surrounding div with the following style:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  alignItems: 'center'\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h3>\n    <Arguments of={Columns} mdxType=\"Arguments\" />\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`# SLIDE 1\n\n<Columns>\n\n1. This slide will have 2 columns\n2. The first one with this numbered list\n\n- And the second column will contain this list\n- Which consists of bullet points\n\n</Columns>\n\n---\n\n# SLIDE 2\n\n<Columns width={['20%','50%','20%']} textAlign=\"center\">\n\nThis slide has three columns, each with different widths.\n\nThe second column is wider.\nBecause \\`textAlign\\` is not an array, it gets applied to each column.\n\nThe third column is smaller again.\nNote that the remaining 10% of width gets used as whitespace, depending on the justify-content parent property.\nIf any child has a flex-grow property, it will grow to fill those last 10%,\nbut you can read up on \\`flex\\` if you want to better understand this.\n\n</Columns>\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"place\"\n    }}>{`Place`}</h2>\n    <p>{`This component allows you to absolutely position an element in your slide, effectively taking it outside of the flow of the other elements.`}<br parentName=\"p\"></br>{`\n`}{`If you do pass neither `}<em parentName=\"p\">{`left`}</em>{`, nor `}<em parentName=\"p\">{`right`}</em>{` properties, the element will be centered horizontally and similarly for `}<em parentName=\"p\">{`top`}</em>{` and `}<em parentName=\"p\">{`bottom`}</em>{`.\nCentering happens, by adding a `}<inlineCode parentName=\"p\">{`transform: translate()`}</inlineCode>{` CSS property, so beware if you pass your own transform property through `}<em parentName=\"p\">{`sx`}</em>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong><br parentName=\"p\"></br>{`\n`}{`This component surround its elements with a div, and it is that div that get's placed.`}<br parentName=\"p\"></br>{`\n`}{`If you use this component to center an image, it is thus important to set your desired width on this element,\nand set the width of the image to 100%.\nOtherwise the image will not look centered, as it is the surrounding div that is centered and not the image.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"properties-1\"\n    }}>{`Properties`}</h3>\n    <Arguments of={Place} mdxType=\"Arguments\" />\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`# SLIDE 1\nThis paragraph is in the normal flow of the slide\n\n<Place bottom=\"10px\">\n\nThis paragraph gets placed in the bottom center.\n\n</Place>\n\n- This list is placed under the first paragraph\n- Just like if the second paragraph was never there\n\n---\n\n# SLIDE 2\nThe image below gets placed in the center of the slide and takes 50% of the slide width.\n\n<Place sx={{width: '50%'}}>\n\n![image&&width=100%](./path/to/image.png)\n\n</Place>\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h2>\n    <p>{`This component applies any property you pass as a custom style to its child.\nIt applies the styles using the `}<em parentName=\"p\">{`sx`}</em>{` property and thus allows the use of theme values.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong><br parentName=\"p\"></br>{`\n`}{`This component only allows to have a single child element!`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"properties-2\"\n    }}>{`Properties`}</h3>\n    <Arguments mdxType=\"Arguments\">\n      {{\n        name: 'children',\n        type: 'element',\n        desc: 'Single child that gets styled according to the sx property.'\n      }}\n      {{\n        name: 'props',\n        type: 'object',\n        required: false,\n        desc: 'Style that gets applied to the child. This is set as a Theme-UI sx property and can thus accept theme aware values.'\n      }}\n    </Arguments>\n    <h3 {...{\n      \"id\": \"examples-1\"\n    }}>{`Examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`# SLIDE 1\n\n<Styling bg=\"accent\" color=\"black\" width=\"100%\" paddingLeft=\"25px\">\n\n- This list has a background color set to your theme's accent color\n- The foreground color is set to black\n- We also set a width and paddingLeft property.\n\n</Styling>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}