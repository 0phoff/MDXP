(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{FEe1:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n("Fcif"),i=n("+I+c"),r=(n("mXGw"),n("/FXl")),o=n("TjRS"),l=n("uhRG"),b=n("vkv/"),c=(n("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/doc/getting_started.doc.mdx"}});var p={_frontmatter:c},m=o.a;function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)(m,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"getting-started"},"Getting Started"),Object(r.b)("p",null,"Before getting started, make sure you have ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org"}),"Node and NPM installed"),"."),Object(r.b)("h2",{id:"tldr"},"TLDR"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"# Initialize presentation project\nnpm init @mdxp/webpack -g my_presentation\ncd my_presentation\n\n# Start dev server\nnpm run start\n\n# Edit presentation with your favourite editor, the browser will automatically refresh when you save\nvim src/presentation.mdx\n\n# Build presentation once you're happy with the end result\nnpm run build\n")),Object(r.b)("h2",{id:"recommended"},"Recommended"),Object(r.b)("p",null,"The easiest and recommended way to get started with MDXP is to use our Webpack template.\nWebpack allows to bundle all your source files and combine them into an output, which you can display in the browser.\nYou can read more about how everything works ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/MDXP/#under-the-hood"}),"here"),".",Object(r.b)("br",{parentName:"p"}),"\n","To use it, just run the following command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"# NPM >= 6.1.0\nnpm init @mdxp/webpack -g my_presentation\ncd my_presentation\n\n# NPM >= 5.2.0\nnpx @mdxp/create-webpack -g my_presentation\ncd my_presentation\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"NOTE"),Object(r.b)("br",{parentName:"p"}),"\n","The ",Object(r.b)("inlineCode",{parentName:"p"},"-g")," flag enables the initialisation of a git repository. Remove that flag if you do not want a repository.")),Object(r.b)("p",null,"This command will create a project with your chosen name.\nThe project will contain a ",Object(r.b)("em",{parentName:"p"},"src")," directory for your source files and a ",Object(r.b)("em",{parentName:"p"},"dist")," directory where the resulting build will go.\nThe ",Object(r.b)("em",{parentName:"p"},"src")," directory already contains a ",Object(r.b)("em",{parentName:"p"},"presentation.mdx")," file, which you can edit to start writing your presentation right away.\nOf course, nothing stops your from also modifying the ",Object(r.b)("em",{parentName:"p"},"index.html")," or ",Object(r.b)("em",{parentName:"p"},"index.jsx")," files to your liking."),Object(r.b)(b.a,{alt:"Directory Structure",src:"public/directory_tree.svg",mdxType:"CenterImage"}),Object(r.b)("p",null,"The project also comes with a few commands to create your presentation:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run start"),Object(r.b)("br",{parentName:"li"}),"This sets up a development server which will rebuild your presentation whenever you make changes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run build:web"),Object(r.b)("br",{parentName:"li"}),"This will create a build from your presentation, which is optimised for serving online. The resulting build can be found in ",Object(r.b)("em",{parentName:"li"},"dist/web"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run build:onepage"),Object(r.b)("br",{parentName:"li"}),"This will create a build which is optimised for presenting. Most data will be consolidated into a single ",Object(r.b)("em",{parentName:"li"},"index.html"),", with only large images, videos or other data files added separately. You can find this build in the ",Object(r.b)("em",{parentName:"li"},"dist/onepage")," folder and should be able to run your presentation in any (modern) browser by just opening the ",Object(r.b)("em",{parentName:"li"},"index.html")," file."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run build:pdf"),Object(r.b)("br",{parentName:"li"}),"This will create a pdf from your presentation, which you can find in ",Object(r.b)("em",{parentName:"li"},"dist/presentation.pdf"),". Note that you first need to run ",Object(r.b)("inlineCode",{parentName:"li"},"npm run build:onepage"),", as the pdf is generated from this build."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run build"),Object(r.b)("br",{parentName:"li"}),"This command creates both web, onepage and pdf versions of your presentation with a single command."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run clean:web"),", ",Object(r.b)("inlineCode",{parentName:"li"},"npm run clean:onepage"),", ",Object(r.b)("inlineCode",{parentName:"li"},"npm run clean:pdf")," and ",Object(r.b)("inlineCode",{parentName:"li"},"npm run clean"),Object(r.b)("br",{parentName:"li"}),"These commands clean up the various files of the different build commands."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"npm run analyze:web"),Object(r.b)("br",{parentName:"li"}),"This will analyze the javascript bundle file of your web bundle with webpack-bundle-analyzer. Note that you first need to run ",Object(r.b)("inlineCode",{parentName:"li"},"npm run build:web")," to generate the bundle and statistics file.")),Object(r.b)("p",null,"If you need to modify or extend the Webpack build pipeline, you can do so by editing the ",Object(r.b)("em",{parentName:"p"},"webpack.config.js")," file."),Object(r.b)(l.a,{url:"/guide-syntax",mdxType:"CTA"},"Write your presentation"),Object(r.b)("h2",{id:"manual"},"Manual"),Object(r.b)("p",null,"At the end of the day, MDXP is just a react library, so you can get it working with any bundler of your liking.\nWhile we do recommend to use our Webpack template, some people might prefer to setup their own build pipeline.\nA complete and thorough guide on how to create your own build pipeline is nigh impossible, but here are some guidelines on what you need to get working:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Include ",Object(r.b)("inlineCode",{parentName:"li"},"react"),", ",Object(r.b)("inlineCode",{parentName:"li"},"react-dom"),", ",Object(r.b)("inlineCode",{parentName:"li"},"theme-ui")," and ",Object(r.b)("inlineCode",{parentName:"li"},"@mdxp/core")," packages. You will probably also want the ",Object(r.b)("inlineCode",{parentName:"li"},"@mdxp/components")," package."),Object(r.b)("li",{parentName:"ul"},"Process JSX into JavaScript (technically not necessary, but who writes React in pure JavaScript?)."),Object(r.b)("li",{parentName:"ul"},"Transform MDX into JavaScript. This is necessary as you will write your presentation in that format. Optionally, you can add the plugins from ",Object(r.b)("inlineCode",{parentName:"li"},"@mdxp/rehypex-plugins")," or others to enhance your markdown syntax."),Object(r.b)("li",{parentName:"ul"},"Handle assets (eg. images) somehow. You can place them into a separate folder or have your bundler process them."),Object(r.b)("li",{parentName:"ul"},"You need to insert a ",Object(r.b)("inlineCode",{parentName:"li"},"Deck")," component from ",Object(r.b)("inlineCode",{parentName:"li"},"@mdxp/core"),", which contains your presentation. Below is a minimal example, written as JSX.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// Note that the main index.html includes this file and has a div with an ID of 'root'\n// If you do not want @mdxp/components, you can remove the import and the 'components' property from <Deck />\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Deck from '@mdxp/core';\nimport components from '@mdxp/components';\nimport MDXPresentation from './presentation.mdx';\n\nReactDOM.render(\n  <Deck components={components}>\n    <MDXPresentation />\n  </Deck>,\n  document.getElementById('root')\n);\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"NOTE"),Object(r.b)("br",{parentName:"p"}),"\n","Note that all examples and guides on this website assume you use the template.")))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/doc/getting_started.doc.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-doc-getting-started-doc-mdx-9bfb0214dd43a497aae4.js.map