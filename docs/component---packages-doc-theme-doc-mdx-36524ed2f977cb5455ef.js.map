{"version":3,"sources":["webpack:///../packages/doc/theme.doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,kCAAiB,mBAAGC,WAAW,KAAQ,CACnC,KAAQ,yBADK,YAAjB,0LAGA,qHAAoG,0BAAYA,WAAW,KAAvB,UAApG,KAA4J,0BAAYA,WAAW,KAAvB,SAA5J,KAAmN,0BAAYA,WAAW,KAAvB,aAAnN,KAA8Q,0BAAYA,WAAW,KAAvB,SAA9Q,2FAA2Z,0BAAYA,WAAW,KAAvB,UAA3Z,+CACsC,mBAAGA,WAAW,KAAQ,CACxD,KAAQ,yBAD0B,YADtC,+BAIA,iBAAQ,CACN,GAAM,gBADR,gBAGA,oGAAmF,mBAAGA,WAAW,KAAQ,CACrG,KAAQ,+BADuE,QAAnF,KAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gTAeL,iBAAQ,CACN,GAAM,eADR,eAGA,kHACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oBAApB,yGAA2L,0BAAYA,WAAW,MAAvB,YAA3L,iCAAkR,mBAAGA,WAAW,MAAS,CACrS,KAAQ,8BADsQ,gBAAlR,KAGA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oBAApB,6CAA+H,0BAAYA,WAAW,MAAvB,aAA/H,kHAEF,iBAAQ,CACN,GAAM,uBADR,uBAGA,qIAAoH,mBAAGA,WAAW,KAAQ,CACtI,KAAQ,yCADwG,SAApH,iC,0MAOJJ,EAAWK,gBAAiB","file":"component---packages-doc-theme-doc-mdx-36524ed2f977cb5455ef.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/media/data/Documents/code/javascript/mdxp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h1>\n    <p>{`MDXP uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://theme-ui.com\"\n      }}>{`Theme-UI`}</a>{` for styling, which allows you to modify any part of your presentation in a consistent manner, which ultimately results in having the same look and feel throughout your presentation.`}</p>\n    <p>{`A theme is just a plain old JavaScript object, with some properties that define your styles (`}<inlineCode parentName=\"p\">{`colors`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`fonts`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`fontSizes`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`space`}</inlineCode>{`, etc.) and some properties which apply those styles to your html and react components (`}<inlineCode parentName=\"p\">{`styles`}</inlineCode>{`).\nWe strongly recommend you to go through `}<a parentName=\"p\" {...{\n        \"href\": \"https://theme-ui.com\"\n      }}>{`Theme-UI`}</a>{`'s excellent documentation.`}</p>\n    <h2 {...{\n      \"id\": \"custom-theme\"\n    }}>{`Custom Theme`}</h2>\n    <p>{`To enable the use of a custom theme, you can simply pass the object to your `}<a parentName=\"p\" {...{\n        \"href\": \"/MDXP/core-components#deck\"\n      }}>{`Deck`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Deck from '@mdxp/core';\nimport theme from './theme.js';\nimport MDXPresentation from './presentation.mdx';\n\nReactDOM.render(\n  <Deck theme={theme}>\n    <MDXPresentation />\n  </Deck>,\n  document.getElementById('root')\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"mdxp-styles\"\n    }}>{`MDXP Styles`}</h2>\n    <p>{`There are a few properties on your theme object, which get interpreted specially by MDXP.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`theme.googleFont`}</inlineCode>{` : The contents of this property can be a URL or an array of URL's, and MDXP will add the appropriate `}<inlineCode parentName=\"li\">{`<link />`}</inlineCode>{` tags to fetch the fonts from `}<a parentName=\"li\" {...{\n          \"href\": \"https://fonts.google.com/\"\n        }}>{`Google Fonts`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`theme.mdxp.slide`}</inlineCode>{` : This style variant gets applied to the `}<inlineCode parentName=\"li\">{`<Slide />`}</inlineCode>{` object that surrounds each of your slides. You can use it to set a default Typography for your presentation.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"syntax-highlighting\"\n    }}>{`Syntax Highlighting`}</h2>\n    <p>{`Syntax highlighting is not enabled by default, however it is quite easy to add it to your theme by using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://theme-ui.com/packages/prism/\"\n      }}>{`prism`}</a>{` package from theme-ui.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}