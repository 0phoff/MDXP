{"version":3,"sources":["webpack:///../packages/components/doc/wrapper.doc.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","ThemeWrapper","InvertWrapper","LayoutWrapper","isMDXComponent"],"mappings":"oiBAUO,IAAMA,EAAe,Q,yNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,iGAAgF,0BAAYC,WAAW,KAAvB,oBAAhF,0BACA,uBACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,6DAA4C,0BAAYA,WAAW,KAAvB,qBAA5C,kFACQ,mBAAGA,WAAW,KAAQ,CAC1B,KAAQ,uDADJ,yBADR,0BAIA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAWC,GAAIC,IAAcH,QAAQ,cACrC,iBAAQ,CACN,GAAM,YADR,YAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,ujBAuBL,uBACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,oDAAmC,0BAAYA,WAAW,KAAvB,QAAnC,QAA4F,0BAAYA,WAAW,KAAvB,cAA5F,oCACA,iBAAQ,CACN,GAAM,gBADR,cAGA,YAAC,IAAD,CAAWC,GAAIE,IAAeJ,QAAQ,cACtC,iBAAQ,CACN,GAAM,cADR,YAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,ohBA2BL,uBACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,+FACA,iBAAQ,CACN,GAAM,gBADR,cAGA,YAAC,IAAD,CAAWC,GAAIG,IAAeL,QAAQ,cACtC,iBAAQ,CACN,GAAM,cADR,YAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,sW,uNA6BTJ,EAAWS,gBAAiB","file":"component---packages-components-doc-wrapper-doc-mdx-c6dc5071474ff1792dc5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/media/data/Documents/code/javascript/mdxp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Arguments from 'gatsby-theme-docz/src/components/arguments.jsx';\nimport { _ThemeWrapper as ThemeWrapper } from '../src/wrapper/theme-wrapper.jsx';\nimport { _InvertWrapper as InvertWrapper } from '../src/wrapper/invert-wrapper.jsx';\nimport { _LayoutWrapper as LayoutWrapper } from '../src/wrapper/layout-wrapper.jsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"wrapper-components\"\n    }}>{`Wrapper Components`}</h1>\n    <p>{`This page contains the documentation for all Wrapper Components that the `}<inlineCode parentName=\"p\">{`@mdxp/components`}</inlineCode>{` package has to offer.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"themewrapper\"\n    }}>{`ThemeWrapper`}</h2>\n    <p>{`This component wraps each slide in a `}<inlineCode parentName=\"p\">{`<ThemeProvider />`}</inlineCode>{` component, allowing you to make modifications to the global theme.\nCheck out `}<a parentName=\"p\" {...{\n        \"href\": \"https://theme-ui.com/guides/nested-theme-providers\"\n      }}>{`Nested ThemeProviders`}</a>{` for more information.`}</p>\n    <h3 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h3>\n    <Arguments of={ThemeWrapper} mdxType=\"Arguments\" />\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<ThemeWrapper theme={{colors: {background: 'tomato'}}}>\n\n# SLIDE 1\nThis slide will have a tomato colored background\n\nI am not sure if it is aesthetically pleasing, but it doesn't have to be.\nAfter all, this is just a silly example\n\n---\n\n# SLIDE 2\nit will also have this tomato background.  \nAre you seriously still reading this ?\n\n</ThemeWrapper>\n\n# SLIDE 3\nThis one will have the default colored background, as it is outside the wrapper\n\nNote that wrappers automatically end a slide, so there is no need for ---, but it doesn't hurt either.\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"invertwrapper\"\n    }}>{`InvertWrapper`}</h2>\n    <p>{`This component inverses the `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`background`}</inlineCode>{` color properties of your theme.`}</p>\n    <h3 {...{\n      \"id\": \"properties-1\"\n    }}>{`Properties`}</h3>\n    <Arguments of={InvertWrapper} mdxType=\"Arguments\" />\n    <h3 {...{\n      \"id\": \"examples-1\"\n    }}>{`Examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`# SLIDE 1\nThis is a normal slide, with your default theme applied\n\n---\n\n<InvertWrapper>\n\n# SLIDE 2\nThis slide will be inverted!  \nNote that you __CANNOT__ ommit the --- after Slide 1, because those mark the end of that slide!\n\n--- \n\n# SLIDE 3\nThis slide will still be inverted\n\n---\n\n</InvertWrapper>\n\n# SLIDE 4\nThis slide is normal again.  \nNote that you __CAN__ ommit the --- after Slide 3, because stopping the wrapper does terminate the slide as well.\nYou can however still add it, as is shown here.\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"layoutwrapper\"\n    }}>{`LayoutWrapper`}</h2>\n    <p>{`This component changes the default layout for all slides inside of it.`}</p>\n    <h3 {...{\n      \"id\": \"properties-2\"\n    }}>{`Properties`}</h3>\n    <Arguments of={LayoutWrapper} mdxType=\"Arguments\" />\n    <h3 {...{\n      \"id\": \"examples-2\"\n    }}>{`Examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`# SLIDE 1\nThis slide has the default layout, as provided in your Deck\n\n---\n\n<LayoutWrapper Layout={HeaderLayout}>\n\n# SLIDE 2\nThis slide will have the HeaderLayout applied\n\n---\n\n<BlankLayout>\n\n# SLIDE 3\nThis slide already has a BlankLayout, thus it will not be wrapped in the HeaderLayout.\n\n</BlankLayout>\n\n</LayoutWrapper>\n\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}